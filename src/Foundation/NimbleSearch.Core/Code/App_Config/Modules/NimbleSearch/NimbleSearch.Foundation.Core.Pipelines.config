<?xml version="1.0" encoding="utf-8"?>

<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:set="http://www.sitecore.net/xmlconfig/set/">
    <sitecore>     
        
        <pipelines>
            <!-- 
                nimble.initQuery
                Set indexname to query
                Set SearchSecurityOption option to true or false
            -->
            <nimble.initQuery>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.InitQuery.SetSecurityOptionByTab, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.InitQuery.SetIndexByTab, NimbleSearch.Foundation.Core"/>
            </nimble.initQuery>
            
            <!-- 
                nimble.buildQuery
                Apply clauses to search query (except for facets and boosting, they have their own pipelines)
            -->
            <nimble.buildQuery>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.BuildQuery.ApplyItemExclusions, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.BuildQuery.ApplyContextLanguage, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.BuildQuery.ApplyLatestVersion, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.BuildQuery.ApplyLocationFilter, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.BuildQuery.ApplyTemplateFilter, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.BuildQuery.ApplyQueryFilter, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.BuildQuery.ApplyKeywords, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.BuildQuery.ApplyBoosting, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.BuildQuery.ApplySorting, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.BuildQuery.ApplyPaging, NimbleSearch.Foundation.Core"/>
            </nimble.buildQuery>
            
            <!-- nimble.applyBoost
                Extension point for custom boosting logic, see existing as examples
            -->
            <nimble.applyBoost>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.ApplyBoost.SimpleBoost, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.ApplyBoost.ApplyDateBoost, NimbleSearch.Foundation.Core"/>
            </nimble.applyBoost>


            <!-- nimble.applyFacetOn
                Extension point for custom facets; handle .FacetOn calls
            -->
            <nimble.applyFacetOn>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.ApplyFacetOn.SimpleFacet, NimbleSearch.Foundation.Core"/>
            </nimble.applyFacetOn>

            <!-- nimble.applySelectedFacet
                Extension point for custom facets; handle .Where calls
            -->
            <nimble.applySelectedFacet>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.ApplySelectedFacet.SimpleFacet, NimbleSearch.Foundation.Core"/>
            </nimble.applySelectedFacet>

            <!-- nimble.mapResult
                Build JSON response object
            -->
            <nimble.mapResult>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.MapResult.InitResponse, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.MapResult.SetTitle, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.MapResult.SetDuration, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.MapResult.SetTotalCount, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.MapResult.SetNoResultsMessage, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.MapResult.HandleView, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.MapResult.HandlePaging, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.MapResult.HandleSorting, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.MapResult.HandleFaceting, NimbleSearch.Foundation.Core"/>
                <processor type="NimbleSearch.Foundation.Core.Pipelines.MapResult.HandleResults, NimbleSearch.Foundation.Core"/>
            </nimble.mapResult>
            
            <!-- nimble.searchAnalytics
                Analytics pipeline 
            -->
            <nimble.searchAnalytics>   
                    <processor type="NimbleSearch.Foundation.Core.Pipelines.SearchAnalytics.TrackKeyword, NimbleSearch.Foundation.Core"/>
            </nimble.searchAnalytics>
        </pipelines>
        
    </sitecore>
</configuration>